version: 2

references:
  dependencies_cache_key: &dependencies_cache_key
    dependencies-cache-{{ checksum "package.json" }}

  restore_dependencies_cache: &restore_dependencies_cache
    restore_cache:
      keys:
        - *dependencies_cache_key
        # fallback to using the latest cache if no exact match is found
        - dependencies-cache-

jobs:
  build:
    docker:
      - image: circleci/node:8.9.4-browsers

    working_directory: ~/repo

    steps:
      - checkout
      - *restore_dependencies_cache

      # install any missing dependency
      - run: yarn install

      - save_cache:
          paths:
            - node_modules
          key: *dependencies_cache_key

      # - run: yarn flow
      - run: yarn test
      - run: yarn build

      - persist_to_workspace:
          root: .
          paths:
            - build

  deploy:
    docker:
      - image: circleci/golang:1.8
      - image: circleci/node:8.9.4

    working_directory: ~/repo

    steps:
      - checkout
      - *restore_dependencies_cache

      - attach_workspace:
          at: .

      - run:
          name: Install netlifyctl
          commands:
            - go get -d github.com/netlify/netlifyctl
            - cd $GOPATH/src/github.com/netlify/netlifyctl
            - make deps build
            - go install

      - run: netlifyctl deploy -A $NETLIFY_TOKEN

workflows:
  version: 2
  build-and-deploy:
    jobs:
      - build
      - deploy:
          requires:
            - build
          filters:
            branches:
              only: master
